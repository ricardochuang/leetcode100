package com.zjx.leetcode19;

public class Num13 {
    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.romanToInt("MCMXCIV"));
    }
}
class Solution {
    public int romanToInt(String s) {
        char[] chars = s.toCharArray();
        int res = 0;
        for (int i = 0; i < chars.length; i++) {
            String string = chars[i] + "";
            if (i + 1 < chars.length && cases(string + chars[i + 1]) != 0){
                res += cases(string + chars[i + 1]);
                i++;
            }
            else res += cases(string);
        }
        return res;
    }
    public int cases(String string){
        switch (string){
            case "M":
                return 1000;
            case "CM":
                return 900;
            case "D":
                return 500;
            case "CD":
                return 400;
            case "C":
                return 100;
            case "XC":
                return 90;
            case "L":
                return 50;
            case "XL":
                return 40;
            case "X":
                return 10;
            case "IX":
                return 9;
            case "V":
                return 5;
            case "IV":
                return 4;
            case "I":
                return 1;
            default:
                return 0;
        }
    }
}

这个cases搞的有点麻烦


class Solution {
    public int romanToInt(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        map.put('M', 1000);
        map.put('D', 500);
        map.put('C', 100);
        map.put('L', 50);
        map.put('X', 10);
        map.put('V', 5);
        map.put('I', 1);

        char[] chars = s.toCharArray();
        int res = 0;
        for (int i = 0; i < chars.length; i++) {
            if (i + 1 < chars.length && map.get(chars[i]) < map.get(chars[i + 1])){
                res += map.get(chars[i + 1]) - map.get(chars[i]);
                i++;
            }
            else if (i + 1 < chars.length && map.get(chars[i]) >= map.get(chars[i + 1])){
                res += map.get(chars[i]);
            }
            else res += map.get(chars[i]);
        }
        return res;
    }
}

用map可以
