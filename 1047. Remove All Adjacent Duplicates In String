package leetcode8;

import java.util.Arrays;
import java.util.Stack;

public class Num1047 {
    public static void main(String[] args) {
        Solution solution = new Solution();
        String res = solution.removeDuplicates("abbaca");
        System.out.println(res);
    }
}

class Solution {
    public String removeDuplicates(String S) {
        if (S.length() == 0) return null;
        if (S.length() == 1) return S;
        Stack<Character> stack = new Stack<>();
        char[] chars = S.toCharArray();
        for (char aChar : chars) {
            if (stack.isEmpty()) stack.push(aChar);
            else if (stack.peek() != aChar) stack.push(aChar);
            else stack.pop();
//            System.out.println("stack = " + stack);
        }
        char[] res = new char[stack.size()];
        for (int i = stack.size() - 1; i >= 0 ; i--) {
            res[i] = stack.pop();
        }
        return new String(res);
    }
}


用栈的思想，跟目前栈顶的不一样，就压入。一样就弹出栈顶。
注意 if 和 else if。
第一个if执行完可能会进入第二个if。

对于返回值，要注意
1. stack直接弹出的话是反序，可以先放到一个char[]里面
2. 我是用的character存的，要转成string，可以直接用 new String(char[])来转
