public int reverse(int x) {
        if (x == 0) return 0;
        int sign = 1;
        if (x < 0) sign = -1;
        String string = x + "";
        string = string.replaceAll("-", "");
        char[] chars = string.toCharArray();
        int i = 0;
        int j = chars.length - 1;
        char temp = ' ';
        while (i < j){
            temp = chars[i];
            chars[i] = chars[j];
            chars[j] = temp;
            i++;
            j--;
        }
        StringBuilder stringBuilder = new StringBuilder();
        int k;
        if (chars[0] == '0') k = 1;
        else k = 0;
        while (k < chars.length){
            stringBuilder.append(chars[k]);
            k++;
        }
        Long res = Long.parseLong(stringBuilder.toString()) * sign;
        if (res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return 0;
        else return Integer.parseInt(String.valueOf(res));
    }
    
    把int转为string，然后双指针换位。
    
    
    class Solution{
    public  int reverse(int x){
        int rev = 0;
        while (x != 0){
            int unit = x % 10;
            x = x / 10;
            if (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && unit > 7)) return 0;
            if (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && unit < -8)) return 0;
            rev = rev * 10 + unit;
        }
        return rev;
    }
    }
    
    
    直接从最后一位砍下来，用一个rev接受，然后*10 + 新来的最后一位，就可以实现反转。
    还不用判断正负就很舒服。
    学一下这里防止出界的方式
